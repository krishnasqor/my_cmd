
############### virtual box ubuntu vms

http://www.osboxes.org/ubuntu/

64 bit 14.04 LTS

https://drive.google.com/file/d/0B_HAFnYs6Ur-M0JSeE1BVWtEQ2c/view



################# gnome metacity compiz flashback

sudo apt-get update; sudo apt-get install gnome-session-fallback

---- menu applet with search

sudo add-apt-repository ppa:nilarimogard/webupd8
sudo apt-get update
sudo apt-get install cardapio cardapio-gnomepanel


######################## sticky notes
sudo apt-get install xpad


################################### erl make and run commands
erl -pa ebin/ deps/*/ebin/     -> erll
erll -s oauth2_s2s -config config/sys.config     %% which includes config file



#################### net_adm
http://erlang.org/pipermail/erlang-questions/2009-April/043160.html

erl -name r@127.0.0.1 -setcookie riak     ## from node which u want to ping riak node
net_adm:ping('riak@127.0.0.1').
############## erlang sites

http://spawnedshelter.com/

http://willcodeforfoo.com/2009/10/getting-command-line-options-into-erlang/


############### splunk


index=nginx NOT host=prod* GET="/images/*" GET="/images/transform" status=499   - status
index=nginx NOT host=prod* GET="/images/*" GET="/images/transform" status=500
index=erlang * host="sq2-imageproc1" 201509011715621511633.jpg
index=erlang host=sq2* Error: Missing_ImageUrl_Details




######################33 RestApi

http://www.restapitutorial.com/httpstatuscodes.html

############################# vim
http://www.cs.colostate.edu/helpdocs/vi.html

Vi search
:set hlsearch
/ or  ? search and n or N to move forward or backward

########## ssh

fist copy the perm certificate to .ssh directory
raju@raju:~/.ssh$ chmod 0600 Again.pem 
raju@raju:~/.ssh$ ssh -i Again.pem ubuntu@raju.raju.com



############### elixir

################# records 

http://stackoverflow.com/questions/3760204/converting-records-to-proplists-and-back


################## cowboy

%%	{QueryString,Req1} = cowboy_req:qs(Req),
%%	KeyValues = cow_qs:parse_qs(QueryString),
%%	io:format("~nKeyValues :: ~p~n",[KeyValues]),
%%	{Method, _Req2} = cowboy_req:method(Req),
%%	{Transform, Req3} = cowboy_req:qs_val(<<"transform">>, Req),



################# erl commands
make
erl -pa ebin/ deps/*/ebin -s image_lib

############## sublimErl
https://github.com/ostinelli/SublimErl


############# eunit 

https://dreid.org/2011/06/13/meck-eunit-best-practices/
git clone https://github.com/richcarl/eunit.git
https://en.wikibooks.org/wiki/Erlang_Programming/Unit_Testing_with_eunit
sudo apt-get install erlang-dev erlang-edoc erlang-eunit (if u get any transport errors)

https://erlcode.wordpress.com/2010/08/30/erlang-eunit-introduction/
http://blakesmith.me/2010/01/27/verbose-erlang-eunit-example.html


-module(my_module).
-module(my_module_tests).
	func1_test() ->
	 	?assertEqual(output,
				my_module:func1(input)).

store_mtq_test() ->
	?assertEqual(<<"{\"error\":\"question field is empty\"}">>,
			por_mtq:store_mtq([{<<"question">>,<<>>},{<<"authorid">>,<<"12345123">>}])),
	?assertEqual(<<"{\"error\":\"authorid field is empty\"}">>,
			por_mtq:store_mtq([{<<"question">>,<<"what is the height of curry_curry">>},
 			{<<"authorid">>,<<>>}])).

run test in shell
eunit:test(my_module).


################### ubuntu

############# ubuntu password login
How do I get Ubuntu to ask me for a password at login again?

`sudo gpasswd -d username nopasswdlogin`


####### remove ubuntu user  
`sudo deluser --remove-home username`


######## change ubuntu user and root password

change root password
 `sudo passwd`

change current user password
 `passwd`

set root password | ubuntu password | reset password
`sudo passwd root`




################### kerl builds and releases
gti clone kerl library
./kerl list releases
./kerl build R14B02 r14b02    -- builds urs desired release
./kerl list builds   
./kerl install erl_17.5 /home/raju/Documents/SQ2/SQ2_Notify/
./kerl install erl_17.5 /home/raju/Documents/sqor/sqor_rank/

open shell and 
. /home/raju/erl_builds/erl_installations/erl18/activate    for 18 version
. /home/raju/erl_builds/erl_installations/activate   for 17 version
. /home/raju/Documents/sqor/por_mtq/activate     --- opens ur shell with 17.5 version
. /home/raju/Documents/sqor/sqor_rank/activate


######################### records in erlang
http://20bits.com/article/erlang-an-introduction-to-records

##################### riak ###############33
http://stackoverflow.com/questions/26556278/connect-to-riak-and-store-data-via-erlang
install riak 
https://packagecloud.io/basho/riak/packages/ubuntu/trusty/riak_2.1.1-1_amd64.deb      ---- this works
http://docs.basho.com/riak/latest/ops/building/installing/debian-ubuntu/#Installing-Riak-From-Source

 > curl -s https://packagecloud.io/install/repositories/basho/riak/script.deb.sh | sudo bash
 > sudo apt-get install riak=2.0.0-1
-------------------------------------------------------------------------------------------------
curl -s https://packagecloud.io/install/repositories/basho/riak/script.deb.sh | sudo bash
sudo apt-get install riak=2.1.1-1
---------------------------------------------------------------------------------------------------

/etc/riak/   riak.conf
/var/lib/riak/generated.configs     app.config

Riak client
https://github.com/basho/riak-erlang-client/

https://github.com/dreverri/sample_riak_erlang_client_app
http://stackoverflow.com/questions/2123004/mapreduce-with-riak

---------------------------------------------------------------------------------------------------
erl -pa /home/raju/Documents/sqor/riak_prac/riak-erlang-client/ebin /home/raju/Documents/sqor/riak_prac/riak-erlang-client/deps/*/ebin

## Riak library

http://basho.github.io/riak-erlang-client/

code:which(riakc_pb_socket).



---------------------------------------------------------------------------------------------------
Riak Map Reduce
http://docs.basho.com/riak/latest/dev/using/mapreduce/
http://docs.basho.com/riak/latest/dev/advanced/mapreduce/


-----------------------------------------------------------------------------------------------------

RIAK ERRORS
http://cartesianfaith.com/2011/03/24/riak-and-protocol-buffers/   -- for econ refused
http://docs.basho.com/riak/latest/ops/running/recovery/errors/    -- riak errors and exceptions


########################### wombat ####################33

if any error like this
wombat: {'EXIT',{{badmatch,{error,"Module binary potentially included by two different applications: common_lib and stdlib."}
add the below line to this file /home/raju/Documents/wombat-1.15.1/rel/wombat/reltool.config --------------
       {app, common_lib, [{incl_cond, exclude}]}, 


######################## ffmpeg ###################################################3
******************************** installation ***************************
src ::https://gist.github.com/xdamman/e4f713c8cd1a389a5917
script.sh
eg_ubuntu.sh
Created a year ago
  Star 102
  Fork 47
 
 Code
 Revisions 1
 Stars 102
 Forks 47
Embed URL

<script src="https://gist.github.com/xdamman/e4f713c8cd1a389a5917.js"></script>

SSH clone URL

git@gist.github.com:e4f713c8cd1a389a5917.git

You can clone with  HTTPS, SSH, or Subversion. 
 Download ZIP
Install latest ffmpeg on ubuntu 12.04 or 14.04
Raw  install_ffmpeg_ubuntu.sh
#!/bin/bash

# Bash script to install latest version of ffmpeg and its dependencies on Ubuntu 12.04 or 14.04
# Inspired from https://gist.github.com/faleev/3435377

# Remove any existing packages:
sudo apt-get -y remove ffmpeg x264 libav-tools libvpx-dev libx264-dev

# Get the dependencies (Ubuntu Server or headless users):
sudo apt-get update
sudo apt-get -y install build-essential checkinstall git libfaac-dev libgpac-dev \
  libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev librtmp-dev libtheora-dev \
    libvorbis-dev pkg-config texi2html yasm zlib1g-dev

# Install x264
sudo apt-get -y install libx264-dev
cd
git clone --depth 1 git://git.videolan.org/x264
cd x264
./configure --enable-static
make
sudo checkinstall --pkgname=x264 --pkgversion="3:$(./version.sh | \
  awk -F'[" ]' '/POINT/{print $4"+git"$5}')" --backup=no --deldoc=yes \
    --fstrans=no --default

# Install AAC audio decoder
cd
wget http://downloads.sourceforge.net/opencore-amr/fdk-aac-0.1.0.tar.gz
tar xzvf fdk-aac-0.1.0.tar.gz
cd fdk-aac-0.1.0
./configure
make
sudo checkinstall --pkgname=fdk-aac --pkgversion="0.1.0" --backup=no \
  --deldoc=yes --fstrans=no --default

# Install VP8 video encoder and decoder.
cd
git clone --depth 1 https://chromium.googlesource.com/webm/libvpx 
cd libvpx
./configure
make
sudo checkinstall --pkgname=libvpx --pkgversion="1:$(date +%Y%m%d%H%M)-git" --backup=no \
  --deldoc=yes --fstrans=no --default


# Add lavf support to x264
# This allows x264 to accept just about any input that FFmpeg can handle and is useful if you want to use x264 directly. See a more detailed explanation of what this means.
cd ~/x264
make distclean
./configure --enable-static
make
sudo checkinstall --pkgname=x264 --pkgversion="3:$(./version.sh | \
  awk -F'[" ]' '/POINT/{print $4"+git"$5}')" --backup=no --deldoc=yes \
  --fstrans=no --default

# Installing FFmpeg
cd
git clone --depth 1 git://source.ffmpeg.org/ffmpeg
cd ffmpeg
./configure --enable-gpl --enable-libfaac --enable-libmp3lame --enable-libopencore-amrnb \
  --enable-libopencore-amrwb --enable-librtmp --enable-libtheora --enable-libvorbis \
    --enable-libvpx --enable-libx264 --enable-nonfree --enable-version3 
make
sudo checkinstall --pkgname=ffmpeg --pkgversion="5:$(date +%Y%m%d%H%M)-git" --backup=no \
  --deldoc=yes --fstrans=no --default
  hash x264 ffmpeg ffplay ffprobe

# Optional: install qt-faststart
# This is a useful tool if you're showing your H.264 in MP4 videos on the web. It relocates some data in the video to allow playback to begin before the file is completely downloaded. Usage: qt-faststart input.mp4 output.mp4.
cd ~/ffmpeg
make tools/qt-faststart
sudo checkinstall --pkgname=qt-faststart --pkgversion="$(date +%Y%m%d%H%M)-git" --backup=no \
  --deldoc=yes --fstrans=no --default install -Dm755 tools/qt-faststart \
  /usr/local/bin/qt-faststart

*******************************************************
https://trac.ffmpeg.org/wiki/CompilationGuide/Ubuntu  ffmpeg installation
https://help.ubuntu.com/community/FFmpeg
http://www.catswhocode.com/blog/19-ffmpeg-commands-for-all-needs        
http://www.labnol.org/internet/useful-ffmpeg-commands/28490/
http://ubuntumanual.org/posts/327/converting-videos-in-ubuntu-using-ffmpeg-the-ultimate-free-video-converter


########################## doc converter      ###########################

ac ac
*********http://www.online-convert.com/
http://www.howtogeek.com/228531/how-to-convert-a-pdf-file-to-editable-text-using-the-command-line-in-linux/
http://pandoc.org/demos.html
http://pandoc.org/installing.html
lowriter -convert-to pdf:writer_pdf_Export 6204SMT.doc   (doc to pdf and pdf to doc)
soffice --convert-to pdf 6204SMT1.doc  --headless  (doc to pdf and pdf to doc)
convert -density 300 ImageTransformAPI.pdf 3.jpg   (pdf to image)
********http://askubuntu.com/questions/246647/jpeg-files-to-pdf
*******So if you used a standard letter page (8.5x11) it would be 612 by 792. (for images to fit in the pdf)
******* http://www.a4papersize.org/a4-paper-size-in-pixels.php#
convert ebay.png picture.pdf   (image to pdf)
convert *.jpg pictures.pdf   (convert all images to one pdf)

################ jpeg tran
http://manpages.ubuntu.com/manpages/raring/man1/jpegtran.1.html
############# imagemagick
http://www.imagemagick.org/Usage/warping/
http://www.script-tutorials.com/html5-image-crop-tool/
http://stackoverflow.com/questions/1740158/documents-and-examples-of-pythonmagick using python

identify -format '%wx%h' car_rotated.jpg   -- 300x250

convert -crop 100x50+5+5 1.jpg 1_croped_100x50    --crop WxH+X+Y

convert 1.jpg -resize 25% 1_scale_25 		-- scale factor 25%

convert 1_temp -resize 200x100 1_Resize_200x100     --- WxH



identify -verbose cup-exif1.jpg | grep Orientation

convert  -auto-orient /home/raju/Desktop/images/1.jpg			--s for EXIf rotation

http://sylvana.net/jpegcrop/exif_orientation.html

convert -rotate -90 car_rotated.jpg new_car_rotated.jpg    -- rotation 


convert 2016-Orient-Watches.png -background white -alpha remove white.png      --- for white background




http://daemonsandagents.tumblr.com/post/108369306151/imagemagick-ways-of-cropping-an-image-to-a    for crop image to circle

convert 3.png \( -size 800x500 xc:none -fill white -draw "circle 400,250 250,50" \) -compose copy_opacity -composite goat_method_one.png

"convert /tmp/3_temp ( -size 800x500 xc:none -fill white -draw 'circle 400,250 400,0' ) -compose copy_opacity -composite /tmp/3_circle.jpg"



http://dreamatico.com/data_images/car/car-1.jpg

####################### github

https://www.youtube.com/watch?v=xh32DIHApZA
https://help.github.com/articles/markdown-basics/    for readme files

new repo
create a repo on git hub and then
from the command line
git init
git remote add origin https://github.com/RajuC/phone_text-erlang-cowboy.git


git clone https://github.com/RajuC/SQ2_Image.git   --- to copy a image from git repo









#To add all the files to the git repo
--------------------------------------------
git add file_name or git add .
--------------------------------------------


#commiting
--------------------------------------------
git commit -m "message while updating"
--------------------------------------------

#for pushing to repo
----------------------
git push origin master
----------------------



=========== git branch
https://github.com/Kunena/Kunena-Forum/wiki/Create-a-new-branch-with-git-and-manage-branches
git checkout -b PE-2601
git push origin PE-2601
git status
git diff
git add .
git commit -m "message"
git push origin PE-2601

make a pull request


to get all branches to local
git fetch --all


========== git pull forcefully 
rewrites all your local worked files
branch can be dev/ master

git fetch origin
git reset --hard origin/dev

========== revert commit undo commit
https://github.com/blog/2019-how-to-undo-almost-anything-with-git
Undo a commit and redo

$ git commit -m "Something terribly misguided"              (1)
$ git reset --soft Head                                   (2)
<< edit files as necessary >>                               (3)
$ git add ...                                               (4)
$ git commit -c ORIG_HEAD  

============== pulling the branch
git clone -b <branch> <remote_repo>
Example:

git clone -b my-branch git@github.com:user/myproject.git

deleting from github
rm -rf directory
if the deleted files shows green in color.
git rm -r one-of-the-directories
git commit -m "Remove duplicated directory"
git push origin master


updating from the original repo to fork
http://stackoverflow.com/questions/18824956/updating-forked-github-repo-to-match-originals-latest-code-and-commits
 cd github-services
$ git remote add upstream https://github.com/Amplify-Social/SQ2_Image
$ git fetch upstream

# then: (like "git pull" which is fetch + merge)
$ git merge upstream/master master


git ssh
https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/


########### generate   ssh key github 

Git adding user | git init | git initial setup

git config --global user.name "RajuC"
git config --global user.email "raju.chittimallea@gmail.com"

ssh-keygen -t rsa -b 4096 -C "raju.chittimallea@gmail.com"
vi ~/.ssh/id_rsa.pub
copy ssh key and update in github


############ git restore deleted files

git ls-files -d | xargs git checkout --





########################### self hosted remote-git-repo github
https://www.kennwilson.com/notes/2013/08/self-hosted-remote-git-repositories/
https://www.youtube.com/watch?v=j1oFazXrzN4
https://git-scm.com/book/en/v1/Git-on-the-Server-The-Protocols


To add a local repository to an existing Git project, you can run something like this for LOCAL protocol
$ git remote add local_proj /opt/git/project.git

To clone a Git repository over SSH, you can specify ssh:// URL like this:
$ git clone ssh://user@server/project.git
Or you can use the shorter scp-like syntax for SSH protocol:
$ git clone user@server:project.git

#################### mnesia

mnesia dir --> rel/sys.config --- > [{mnesia, [{dir, "/home/raju/Documents/sjsu/spa/mnesia_db"}]}]. 
mnesia dir ---> relvm.args  ---- > -mnesia dir '"/home/raju/Documents/sjsu/spa/mnesia_db"'

mnesia:create_table(tag_reader_info,[{disc_copies,[node()|nodes()]},{attributes,record_info(fields,tag_reader_info)}]),
mnesia:create_table(users_info,[{index, [name]},{disc_copies,[node()|nodes()]},{attributes,record_info(fields,users_info)}]),
mnesia:create_table(track_user_info,[{index,[tag_id]},{disc_copies,[node()|nodes()]},{attributes,record_info(fields,track_user_info)}]),

mnesia:dirty_index_read(table_name,FieldVal,fieldname).
mnesia:dirty_index_read(table_name,FeildVal,#table_name.fieldname).


################## grep commands

http://www.thegeekstuff.com/2009/03/15-practical-unix-grep-command-examples/
----------------------
grep -R "string" $path
----------------------
################# find

sudo find / -type d -name 'dir'


############################## rebar

https://github.com/rebar/rebar
https://github.com/rebar/rebar/wiki

####################### erlang.mk
------------------------------------------------------------------
create a dir and
give the path of erlang.mk path

make -f /home/raju/Documents/sqor/erlang.mk/erlang.mk bootstrap    || bootstrap-lib
make -f /home/raju/Documents/sqor/erlang.mk/erlang.mk erlang-mk
make -f /home/raju/Documents/sqor/erlang.mk/erlang.mk bootstrap-rel
----------------------------------------------------------------------------------------
##just add the dependencies in the MakeFile 
----------------------------------------------------------------------------------------
DEPS = cowboy .. and so on
make
----------------------------------------------------------------------------------------


> Hello!
>
> erlang.mk 1.0 has been released.
>
> erlang.mk is a GNU Make based build system with bootstrap and package
> index features that make life so much better.
>
>    https://github.com/ninenines/erlang.mk
>
> Going from 0 to release is a 5 steps process with erlang.mk.
>
>   *  # Create a directory for your application
>   *  # Download erlang.mk into that directory
>   *  make -f erlang.mk bootstrap bootstrap-rel
>   *  make
>   *  ./_rel/your_release/bin/your_release console
>
> And if you want to use a third party project, like Cowboy, you simply
> need to add this one line to your Makefile and then run make again:
>
>   *  DEPS = cowboy


{start|start_boot <file>|foreground|stop|restart|reboot|pid|ping|console|console_clean|console_boot <file>|attach|remote_console|upgrade|escript|rpc|rpcterms}

############################333 Restful web services api
http://no-fucking-idea.com/blog/2013/01/22/making-request-to-rest-resources-in-erlang/
http://robhirschfeld.com/2012/08/15/erlang-http-client-restful-api-post-example-code/    --- parsing json as body
Method = post,
URL = "http://192,168.124.10:3000/node/2.0/new",
Header = [],
Type = "application/json",
Body = "{\"name\":\"foo.example.com\"}",
HTTPOptions = [],
Options = [],
R = httpc:request(Method, {URL, Header, Type, Body}, HTTPOptions, Options),
{ok, {{"HTTP/1.1",ReturnCode, State}, Head, Body}} = R.

case httpc:request(Method, {binary_to_list(Url), [], binary_to_list(Type), Body}, [], []) of
    {ok, {{"HTTP/1.1",200, _State}, _Head, ResponseBody}} ->
        io:format("Body :~p~n~n",[ResponseBody]);
    {ok, {{"HTTP/1.1",ResponseCode, _State}, _Head, ResponseBody}} ->
         io:format("Response code : ~p~n Body :~p~n~n",[ResponseCode, ResponseBody]);
    {error,Reason} ->
        io:format("~nerror error : ~p~n",[Reason]),
        {error,Reason}
  end.



{"id", Key} = lists:keyfind("id",1,json:parse(Body)),
***********************************
post(URL, ContentType, Body) -> request(post, {URL, [], ContentType, Body}).
get(URL)                     -> request(get,  {URL, []}).
head(URL)                    -> request(head, {URL, []}).

request(Method, Request) ->
    httpc:request(Method, Request, [], []).

################ aliasses
--------------------------------------------
erl -pa ebin deps/*/ebin  
--------------------------------------------
##Instead of running the above whole command we can create aliasses to run the binaries of two directories  /dir1/ebin  and /dir2/ebin then we can create aliasses
--------------------------------------------
alias erll = 'erl -pa ebin deps/*/ebin
erll
--------------------------------------------
##next time just type erll for entering erl environment   to see aliases = cat ~/.bashrc

----------
json format on terminal

sudo apt-get install python-pygments

in ~/.bashrc
alias ppj='python -m json.tool'
alias ppjc='python -m json.tool | pygmentize -l javascript

example json output
curl http://api.sqor.com/entities/226601 |ppjc


######333 restart bash
. ~/.bashrc

######################### to access the paths of release
code:priv_dir(phone_text).
check code library


##################### html and css
https://css-tricks.com/quick-css-trick-how-to-center-an-object-exactly-in-the-center/

################### write to file
Data = [1,2,3,{car, "honda"}],
file:write_file("/tmp/foo", io_lib:fwrite("~p.\n", [Data])).
file:write_file("/tmp/foo", Data)).

################### ejabberd 

ejabberd-15.07/rel/ejabberd/etc/ejabberd   ---path for  ejabberdctl.cfg
http://documents.mx/documents/ejabberd-user-guide.html



##################### lager configuration

1) Configuration should be done in the rel/sys.config or another config file naming "other.sys.config"

2) In the make file cp the rel/sys.config to the project folder(test_lib)
==================================================
	ENV = development
# after app compiles, copy configs to root so that release can find them
app::
	cp rel/$(ENV).sys.config ./sys.config
	cp rel/vm.args ./vm.args
=========================================================
3) change in the relx.config to copy sys.config file to the release version

{overlay, 
    [
        {copy, "sys.config", "releases/\{\{rel_vsn\}\}/sys.config"},
        {copy, "vm.args", "releases/\{\{rel_vsn\}\}/vm.args"}
    ]
}.

===================================================
#############################  AWS AWS

aws endpoints
http://docs.aws.amazon.com/general/latest/gr/rande.html#sns_region      -- aws regions endpoint

https://signin.aws.amazon.com/oauth 
http://docs.aws.amazon.com/sns/latest/dg/mobile-push-api.html    
http://docs.aws.amazon.com/sns/latest/api/API_CreatePlatformApplication.html
http://docs.aws.amazon.com/general/latest/gr/signature-version-2.html      for signature


==========================
scp commands
To upload a file from your laptop to Amazon instance:

$scp -i ~/Desktop/amazon.pem ~/Desktop/MS115.fa  ubuntu@ec2-54-166-128-20.compute-1.amazonaws.com:~/data/

to download a file from Amazon instance to your laptop:

$scp -i ~/Desktop/amazon.pem ubuntu@ec2-54-166-128-20.compute-1.amazonaws.com:/data/ecoli_ref-5m-trim.fastq.gz ~/Download/

scp -i ~/.ssh/Permission.pem ubuntu@prod-ftp-ricardo2/mnt/statsinc_archive/BUND_BOX.tgz ~/Desktop/


ssh -i ~/.ssh/Permission.pem ubuntu@54.209.174.149    dev sqor_ft

ssh -i ~/.ssh/Permission.pem ubuntu@54.209.174.149


then make
########################### lager

lager sys.config 
replace the project_name with your service name
=========================================================
[
 {lager, [
            %% What handlers to install with what arguments
            %% The defaults for the logfiles are to rotate the files when
            %% they reach 10Mb or at midnight, whichever comes first, and keep
            %% the last 5 rotations. See the lager README for a description of
            %% the time rotation format:
            %% https://github.com/basho/lager/blob/master/README.org
            %%
            %% If you wish to disable rotation, you can either set the size to 0
            %% and the rotation time to "", or instead specify a 2-tuple that only
            %% consists of {Logfile, Level}.
            %%
            %% If you wish to have riak log messages to syslog, you can use a handler
            %% like this:
            %%   {lager_syslog_backend, ["riak", daemon, info]},
            %%
            {log_root, "./log"},
            {handlers, [
                        {lager_console_backend, debug},
                        {lager_file_backend,
                            [
                              {file, "sq2_imageproc-debug.log"}, {level, debug}, {size, 10485760}, {date, "$D0"}, {count, 5}
                            ]}]},

            %% Whether to write a crash log, and where.
            %% Commented/omitted/undefined means no crash logger.
            {crash_log, "./log/sq2_imageproc-crash.log"},

            %% Maximum size in bytes of events in the crash log - defaults to 65536
            {crash_log_msg_size, 65536},

            %% Maximum size of the crash log in bytes, before its rotated, set
            %% to 0 to disable rotation - default is 0
            {crash_log_size, 10485760},

            %% What time to rotate the crash log - default is no time
            %% rotation. See the lager README for a description of this format:
            %% https://github.com/basho/lager/blob/master/README.org
            {crash_log_date, "$D0"},

            %% Number of rotated crash logs to keep, 0 means keep only the
            %% current one - default is 0
            {crash_log_count, 5},


            %% Whether to redirect error_logger messages into lager - defaults to true
            {error_logger_redirect, true},

            %% maximum number of error_logger messages to handle in a second
            %% lager 2.0.0 shipped with a limit of 50, which is a little low for riak's startup
            {error_logger_hwm, 100}
        ]}
].


=================================================================================
Commands of lagger
(raghu_lib@127.0.0.1)1> sqor_logger:error("width is lesser than zero",[{widht,-21}]).                      
lager:error("widht=~p type=~p ",[-21,"width is lesser than zero"])
ok
(raghu_lib@127.0.0.1)2> 15:52:15.551 [error] widht=-21 type="width is lesser than zero" 

(raghu_lib@127.0.0.1)2> sqor_logger:info("width is lesser than zero",[{widht,-21}]). 
lager:info("widht=~p type=~p ",[-21,"width is lesser than zero"])
ok
(raghu_lib@127.0.0.1)3> sqor_logger:warning("width is lesser than zero",[{widht,-21}]).
lager:warning("widht=~p type=~p ",[-21,"width is lesser than zero"])
ok
(raghu_lib@127.0.0.1)4> lager:error("widht=~p type=~p ",[-21,"width is lesser than zero"])
(raghu_lib@127.0.0.1)4> 
(raghu_lib@127.0.0.1)5> sqor_logger:debug("width is lesser than zero",[{widht,-21}]).     
lager:debug("widht=~p type=~p ",[-21,"width is lesser than zero"])


-define(LOGTYPE,"lager").
-define(LOGFORMAT(Level,Format,Args),
        _ = lager:Level(Format,Args)).
-define(LOGMSG(Level,Format),
        _ = lager:Level(Format)).

%%?LOGFORMAT(info, "POST ~p", [element(1, cowboy_req:path(Req))]),
?LOGFORMAT(info, "notify response: ~p", [Resp]),
?LOGFORMAT(info, "cache insert user_id=~p item_id=~p", [Uid, Iid]),
?LOGMSG(debug, "Application nf started").
================================================================================

############################################# XML
https://github.com/willemdj/erlsom
 


#################################### Redbug
trace the MFA erlang

http://stackoverflow.com/questions/1954894/using-trace-and-dbg-in-erlang




##################### Curl 
http://curl.haxx.se/docs/httpscripting.html
=================post request

curl -H "Content-Type: application/json" -X POST -d '{"Action":"PublishToTarget","Message":{"title": "SPORTalk", "message": "text", "url": "url" },"EndPointArn":"arn:aws:sns:us-east-1:742333168435:endpoint/GCM/GCM-dev/c0f6bbfc-a71f-3de6-b08d-fccb7c3b2561"}' http://localhost:8044/

curl -H "Content-Type: application/json" -X POST -d '{"Action":"PublishToTarget","Message":"Hello Doctor","EndPointArn":"arn:aws:sns:us-east-1:742333168435:endpoint/GCM/GCM-dev/c0f6bbfc-a71f-3de6-b08d-fccb7c3b2561"}' http://localhost:8044/

curl -i -d echo=echomeplz http://localhost:8080

curl -H "Content-Type: application/json" -X POST -d '{"question":"what is my name?","authorid":"12345"}' http://localhost:8019/post/ 


############################################### cassandra ####################
http://docs.datastax.com/en/cassandra/2.2/cassandra/install/installDeb.html
http://wiki.apache.org/cassandra/DebianPackaging
Installing DataStax Community on Debian-based systems

Use these steps to install Cassandra using APT repositories on Debian and Ubuntu Linux.

For a complete list of supported platforms, see DataStax Community – Supported Platforms.¶

Prerequisites

Advanced Package Tool is installed.
Root or sudo access to the install machine.
Latest version of Oracle Java SE Runtime Environment (JRE) 8 or OpenJDK 7.
Python 2.6+ (if installing OpsCenter).
The packaged releases create a cassandra user. When starting Cassandra as a service, the service runs as this user. The following utilities are included in a separate package: sstable2json, sstablelevelreset, sstablemetadata, json2sstable, sstablerepairedset, sstablesplit, and token-generator.¶

Procedure

In a terminal window:

Check which version of Java is installed by running the following command:
$ java -version
It is recommended to use the latest version of Oracle Java 8 or OpenJDK 7 on all nodes.
Add the DataStax Community repository to the /etc/apt/sources.list.d/cassandra.sources.list
$ echo "deb http://debian.datastax.com/community stable main" | sudo tee -a /etc/apt/sources.list.d/cassandra.sources.list
Optional: On Debian systems, to allow installation of the Oracle JVM instead of the OpenJDK JVM:
In /etc/apt/sources.list, find the line that describes your source repository for Debian and add contrib non-free to the end of the line. For example:
deb http://some.debian.mirror/debian/ $distro main contrib non-free
Save and close the file when you are done.
Add the DataStax repository key to your aptitude trusted keys.
$ curl -L http://debian.datastax.com/debian/repo_key | sudo apt-key add -
Install the latest package:
$ sudo apt-get update
$ sudo apt-get install dsc22
$ sudo apt-get install cassandra-tools ## Optional utilities
Note: The optional utilities are json2sstable, sstable2json, sstablelevelreset, sstablemetadata, sstableofflinerelevel, sstablerepairedset, sstablesplit, token-generator. Each utility provides usage/help information; type help after entering the command.
The DataStax Community distribution of Cassandra is installed.

Because the Debian packages start the Cassandra service automatically, you must stop the server and clear the data:
Doing this removes the default cluster_name (Test Cluster) from the system table. All nodes must use the same cluster name.

$ sudo service cassandra stop
$ sudo rm -rf /var/lib/cassandra/data/system/*

$ sudo service cassandra start

http://docs.datastax.com/en/cql/3.0/cql/cql_reference/create_keyspace_r.html       for documentation of queries

=============================== cassandra queries ============================
creating keyspace 
CREATE KEYSPACE demodb WITH REPLICATION = {'class' :'NetworkTopologyStrategy', 'datacenter1' : 3 };



########################################## MAPS ERLANG
http://www.erlang.org/eeps/eep-0043.html


############################### docker
https://docs.docker.com/linux/

service docker start
docker images

basic docker commands
	- docker run <image>
	- docker start <name/id>
	- docker stop <name/id>
	- docker ps [-a include stopped containers]
	- docker rm <name/id>     ====== remove

building a docker image



docker and erlang
http://blog.scottlogic.com/2016/01/25/playing-with-docker-compose-and-erlang.html
https://github.com/ceejsmith/distributed-erlang


=================================================random

http://stackoverflow.com/questions/12788799/how-to-generate-a-random-alphanumeric-string-with-erlang



==================================== linux fixes
google chrome 
W: Failed to fetch http://dl.google.com/linux/chrome/deb/dists/stable/Release  Unable to find expected entry 'main/binary-i386/Packages' in Release file (Wrong sources.list entry or malformed file)

You may have your own preferred method, but for this walkthrough I will use Gedit.

1. Open a new Terminal window and run the following command (assuming you’re on the Stable Channel, if not, see the featured comment):

sudo gedit /etc/apt/sources.list.d/google-chrome.list
2. In the text file that opens edit the file so that the line reads:

deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main
The only addition you need to make is entering the [amd64] architecture after ‘deb’ but preceding the ‘http’. Do not edit or replace any other text in this file.

3. Hit Save. Close the Gedit window.

Now return to the Terminal and refresh your package list by running:

sudo apt-get update




=========================== queries
binaries 
A = <<"a">>
B = <<A/binary, "b">> = <<"ab">>
C = <<B/binary, "c">> = <<"abc">>


A = [a]
B = A ++ [b] = [a] ++ [b] = [a|[b]]
C = B ++ [c] = [a|[b]] ++ [c] = [a|[b|[c]]]


A = [a]
B = [b|A] = [b,a]
C = [c|B] = [c,b,a]





========================

to get keys from the buckets

curl http://localhost:8098/buckets/ricardo-stats-cache/keys?keys=true

http://localhost:8098/types/map/buckets/articles/datatypes/fdfa9ee8-f787-4603-b1c0-c6ba48994d35



io:format 
%%    file:write_file("/tmp/redcard", io_lib:fwrite("~p.\n", [Value])), 











================== tail command
tail -f _rel/hu_release/log/hu_server.log 

========================== jira

https://jira.atlassian.com/secure/WikiRendererHelpAction.jspa?section=all


############################### riak http

http://docs.basho.com/riak/kv/2.1.4/developing/api/http/fetch-object/

mix credo


====================== ls
list command to get a particular index of all files
ls | head -395 | tail -1     # number gives the list of files from 395



################# mac to virtual pc (ubuntu)

Put network settings from NAT to bridged adapter in Virtualbox settings for that machine. 
Then your virtual machine will be in local network with your host machine. 
It will probably get the IP from modem if DHCP is enabled, then scp to that machine. 
You also need to have ssh-server installed on Ubuntu machine:
sudo apt-get install openssh-server
That should work: scp file host:/some/directory

scp ubuntu/* raju@192.168.1.109:/home/raju/Desktop/ubuntu/

scp mac/files(Src) ubuntu_system(Dest)




##############  install phoenix / install elixir 

https://pikender.github.io/elixir/elixir-setup/

Install Elixir

1  wget https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb
1' sudo dpkg -i erlang-solutions_1.0_all.deb
2  sudo apt-get update
3  sudo apt-get install elixir

Install Phoenix

5  mix local.hex
6  mix archive.install https://github.com/phoenixframework/phoenix/releases/download/v1.0.3/phoenix_new-1.0.3.ez

Linux-only filesystem watcher that Phoenix uses for live code reloading

7  sudo apt-get install inotify-tools

Install Postgres

8  $ sudo apt-get update
9 sudo apt-get install postgresql-9.4

10 Install npm and node as below

================================= mean stack


install nodejs | install npm | install node

curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -
sudo apt-get install -y nodejs

https://www.digitalocean.com/community/tutorials/how-to-install-a-mean-js-stack-on-an-ubuntu-14-04-server

https://scotch.io/tutorials/build-a-restful-api-using-node-and-express-4
http://adrianmejia.com/blog/2014/10/01/creating-a-restful-api-tutorial-with-nodejs-and-mongodb/





===================trailing spaces

remove_trailing_whitespaces.sh

perl -pi -e 's/[ \t]+$//' $@   


<<<<<<< HEAD


###### erlang actor model 

Actor concurrency

So what's the alternative? The actor model of concurrency has recently gained prominence, largely thanks to some success achieved by its flagship language, Erlang.

The actor model consists of a few key principles:

No shared state
Lightweight processes
Asynchronous message-passing
Mailboxes to buffer incoming messages
Mailbox processing with pattern matching
Let's look at these principles in more detail. An actor is a process that executes a function. Here a process is a lightweight user-space thread (not to be confused with a typical heavyweight operating-system process). Actors never share state and thus never need to compete for locks for access to shared data. Instead, actors share data by sending messages that are immutable. Immutable data cannot be modified, so reads do not require a lock.

Messages are sent asynchronously and are buffered in an actor's mailbox. A mailbox is essentially a queue with multiple producers (other actors) and a single consumer. A particular actor is driven by receiving messages from the mailbox based on pattern matching.

Some key assumptions are built into this model:

Processes are cheap (in memory) and fast to create
Processes are small and thus large numbers of processes can be created
Processes are not bound to kernel threads and can be efficiently scheduled in user space
The scheduler requires the ability to pause and continue process execution
Messages can be retrieved by efficiently pattern-matching messages in the mailbox
=======
#################### phoenix elixir

https://pikender.github.io/elixir/elixir-setup/
http://www.phoenixframework.org/docs/installation


####################### postgres

https://www.digitalocean.com/community/tutorials/how-to-install-and-use-postgresql-on-ubuntu-14-04

=== installation
sudo apt-get update
sudo apt-get install postgresql postgresql-contrib
===== postgres users
- sudo -i -u postgres
- go to postgres shell by typing 'psql' command
- change the password to 'postgres'  by entering the below command 
      ALTER USER postgres PASSWORD 'postgres';  
=====




### upgrade npm
  sudo npm -g install npm@latest


### upgrade nodejs to v4.2.6

  https://davidwalsh.name/upgrade-nodejs
  sudo npm cache clean -f
  sudo npm install -g n
  sudo n v4.2.6

>>>>>>> addb562cb73f7555a2f64f6944010225c65e9690



################# postgres

sudo -i -u postgres   for postgres user
postgres@raju:~$ psql -d game_center_dev   to get into certain database
game_center_dev=# \d events;   // to see events table
ctrl+d to exit


################ Ecto migration 
https://chartio.com/resources/tutorials/how-to-list-databases-and-tables-in-postgresql-using-psql
1) mix ecto.drop
2) mix ecto.gen.migration create_events   // create a event
  edit the file with the required schema and fields in the change function
3) mix ecto.create && mix ecto.migrate
4) iex -S mix phoenix.server


=================commands

PostgreSQL is one of the best database engines for an average web project and many who moves to psql from mysql (for example) often ask the following questions: what  is the analog of “show tables” in postgres? or how can I get the list of databases in postgres like “show databases” in mysql? The answers are short:

https://chartio.com/resources/tutorials/how-to-list-databases-and-tables-in-postgresql-using-psql



sudo -i -u postgres   for postgres user
postgres@raju:~$ psql -d game_center_dev   to get into certain database
game_center_dev=# \d events;   // to see events table
ctrl+d to exit

postgres=# \l
to list all the users

postgres=# \c sales  
to switch the databases

sales=# \dt
list the tables in the db

mysql: SHOW TABLES
postgresql: \d
postgresql: SELECT table_name FROM information_schema.tables WHERE table_schema = 'public';

mysql: SHOW DATABASES
postgresql: \l
postgresql: SELECT datname FROM pg_database;

mysql: SHOW COLUMNS
postgresql: \d table
postgresql: SELECT column_name FROM information_schema.columns WHERE table_name ='table';

mysql: DESCRIBE TABLE
postgresql: \d+ table
postgresql: SELECT column_name FROM information_schema.columns WHERE table_name ='table';


